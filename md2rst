#!/usr/bin/env python
# -*- coding: utf-8 -*-

#  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
#
#  md2rst
#  Copyright 2016 Christopher Simpkins
#  MIT license
#
#  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

import sys
import os

# check for presence of an installed system executable by executable name
#  see http://stackoverflow.com/questions/377017/test-if-executable-exists-in-python

def which(program):
    fpath, fname = os.path.split(program)
    if fpath:
        if os.path.isfile(program) and os.access(program, os.X_OK):
            return program
    else:
        for path in os.environ["PATH"].split(os.pathsep):
            path = path.strip('"')
            exe_file = os.path.join(path, program)
            if os.path.isfile(exe_file) and os.access(exe_file, os.X_OK):
                return exe_file

    return None

def execute(command):
    try:
        response = subprocess.call(command, shell=True)
        if response == 0:
            return True
        else:
            return False
    except subprocess.CalledProcessError as cpe:
        sys.stderr.write("[md2rst] Error: There was an error with the execution of Pandoc. " + str(cpe.output))
        sys.exit(1)

def convert(mdpath, rstpath):
    command = "pandoc --from=markdown --to=rst --output=" + rstpath + " " + mdpath
    return execute(command)  # returns True or False based upon success of execution


def main(args):
    if which("pandoc") is not None:   # test for pandoc install on system
        mdpath = ""
        rstpath = ""

        if len(args) == 2:
            pathone = args[0]
            pathtwo = args[1]

            if pathone.lower.endswith(".md"):
                mdpath = pathone
            elif pathtwo.lower.endswith(".md"):
                mdpath = pathtwo
            elif pathone.lower() == "readme":
                mdpath = pathone
            elif pathtwo.lower() == "readme":
                mdpath = pathtwo
            else:
                sys.stderr.write("[md2rst] Error: Unable to detect the Markdown file in your command.  Please use a Markdown file path that has a .md extension or uses the non-case sensitive file name README.")
                sys.exit(1)

            if convert(mdpath, rstpath) is True:
                response_string = "[md2rst] '" + mdpath + "'' was converted to '" + rstpath + "'."
                print(response_string)
                sys.exit(0)
            else:
                sys.stderr.write("[md2rst] Error: There was an unspecified error with the Pandoc conversion")
                sys.exit(1)
        elif len(args) == 1:
            mdpath = args[0]
            if "." in mdpath:
                rstpath_pre = os.path.basename(mdpath)
                rstpath = rstpath_pre + ".rst"
            else:
                rstpath = mdpath + ".rst"

            if convert(mdpath, rstpath) is True:
                response_string = "[md2rst] '" + mdpath + "'' was converted to '" + rstpath + "'."
                print(response_string)
                sys.exit(0)
            else:
                sys.stderr.write("[md2rst] Error: There was an unspecified error with the Pandoc conversion")
                sys.exit(1)

    else:
        sys.stderr.write("[md2rst] Error: Pandoc was not found on your system.  Please install Pandoc and then try again.\n")
        sys.exit(1)


if __name__ == '__main__':
    main(sys.argv[1:])
